services:
  # Layanan Backend API
  backend:
    build:
      context: ./backend # Lokasi Dockerfile backend
    container_name: notes_api
    restart: unless-stopped
    env_file:
      - ./backend/.env # Memuat variabel dari file .env
    ports:
      - "3000:3000" # Memetakan port 3000 dari kontainer ke host
    depends_on:
      - db # Backend akan menunggu sampai service 'db' siap

  # Layanan Frontend UI
  frontend:
    build:
      context: ./frontend/my_notes # Lokasi Dockerfile frontend
      args:
        # Mengirim build-time argument ke Dockerfile frontend
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    container_name: notes_ui
    restart: unless-stopped
    ports:
      - "8080:80" # Akses frontend melalui http://localhost:8080
    depends_on:
      - backend

  # Layanan Database PostgreSQL
  db:
    image: postgres:14-alpine
    container_name: notes_db
    restart: unless-stopped
    env_file:
      - ./backend/.env # Menggunakan variabel yang sama dengan backend untuk setup DB
    ports:
      - "5432:5432" # Opsional, untuk koneksi ke DB dari luar (misal: DBeaver)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Menyimpan data DB secara persisten

# Mendeklarasikan volume untuk persistensi data database
volumes:
  postgres_data:
